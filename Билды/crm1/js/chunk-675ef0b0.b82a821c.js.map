{"version":3,"sources":["webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///../../../src/components/VPagination/VPagination.ts","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","directives","ripple","props","type","Boolean","default","methods","genRipple","data","this","value","center","Object","click","onChange","$createElement","breakpoints","breakpointProps","String","offsetProps","orderProps","propMap","col","offset","order","breakpointClass","className","val","breakpoint","prop","cache","functional","cols","alignSelf","validator","str","includes","tag","render","cacheKey","parent","classList","hasColClasses","h","class","Resize","circle","disabled","length","nextIcon","prevIcon","totalVisible","Number","maxButtons","selected","computed","classes","themeClasses","items","parseInt","maxLength","Math","range","even","left","right","start","end","watch","mounted","init","setTimeout","onResize","width","$el","parentElement","window","next","e","previous","from","i","genIcon","staticClass","attrs","on","fn","genItem","color","setBackgroundColor","genItems","map","key","index","isNaN","children","$vuetify","rtl","modifiers","quiet","Touch","inset","loading","flat","role","validationState","hasError","hasColor","switchData","setTextColor","undefined","genDefaultSlot","genSwitch","genInput","attrs$","onSwipeRight","genProgress","$slots","progress","size","indeterminate","onSwipeLeft","onKeydown","model","event","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","valueComparator","isDirty","rippleState","genLabel","domProps","checked","blur","change","focus","keydown","ref","onBlur","onFocus"],"mappings":"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","file":"js/chunk-675ef0b0.b82a821c.js","sourcesContent":["// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","import './VPagination.sass'\n\nimport VIcon from '../VIcon'\n\n// Directives\nimport Resize from '../../directives/resize'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode, CreateElement } from 'vue'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-pagination',\n\n  directives: { Resize },\n\n  props: {\n    circle: Boolean,\n    disabled: Boolean,\n    length: {\n      type: Number,\n      default: 0,\n      validator: (val: number) => val % 1 === 0,\n    },\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    totalVisible: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n  },\n\n  data () {\n    return {\n      maxButtons: 0,\n      selected: null as number | null,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-pagination': true,\n        'v-pagination--circle': this.circle,\n        'v-pagination--disabled': this.disabled,\n        ...this.themeClasses,\n      }\n    },\n\n    items (): (string | number)[] {\n      const totalVisible = parseInt(this.totalVisible, 10)\n\n      const maxLength = Math.min(\n        Math.max(0, totalVisible) || this.length,\n        Math.max(0, this.maxButtons) || this.length,\n        this.length\n      )\n\n      if (this.length <= maxLength) {\n        return this.range(1, this.length)\n      }\n\n      const even = maxLength % 2 === 0 ? 1 : 0\n      const left = Math.floor(maxLength / 2)\n      const right = this.length - left + 1 + even\n\n      if (this.value > left && this.value < right) {\n        const start = this.value - left + 2\n        const end = this.value + left - 2 - even\n\n        return [1, '...', ...this.range(start, end), '...', this.length]\n      } else if (this.value === left) {\n        const end = this.value + left - 1 - even\n        return [...this.range(1, end), '...', this.length]\n      } else if (this.value === right) {\n        const start = this.value - left + 1\n        return [1, '...', ...this.range(start, this.length)]\n      } else {\n        return [\n          ...this.range(1, left),\n          '...',\n          ...this.range(right, this.length),\n        ]\n      }\n    },\n  },\n\n  watch: {\n    value () {\n      this.init()\n    },\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.selected = null\n\n      this.$nextTick(this.onResize)\n      // TODO: Change this (f75dee3a, cbdf7caa)\n      setTimeout(() => (this.selected = this.value), 100)\n    },\n    onResize () {\n      const width = this.$el && this.$el.parentElement\n        ? this.$el.parentElement.clientWidth\n        : window.innerWidth\n\n      this.maxButtons = Math.floor((width - 96) / 42)\n    },\n    next (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value + 1)\n      this.$emit('next')\n    },\n    previous (e: Event) {\n      e.preventDefault()\n      this.$emit('input', this.value - 1)\n      this.$emit('previous')\n    },\n    range (from: number, to: number) {\n      const range = []\n\n      from = from > 0 ? from : 1\n\n      for (let i = from; i <= to; i++) {\n        range.push(i)\n      }\n\n      return range\n    },\n    genIcon (h: CreateElement, icon: string, disabled: boolean, fn: EventListener): VNode {\n      return h('li', [\n        h('button', {\n          staticClass: 'v-pagination__navigation',\n          class: {\n            'v-pagination__navigation--disabled': disabled,\n          },\n          attrs: {\n            type: 'button',\n          },\n          on: disabled ? {} : { click: fn },\n        }, [h(VIcon, [icon])]),\n      ])\n    },\n    genItem (h: CreateElement, i: string | number): VNode {\n      const color: string | false = (i === this.value) && (this.color || 'primary')\n      return h('button', this.setBackgroundColor(color, {\n        staticClass: 'v-pagination__item',\n        class: {\n          'v-pagination__item--active': i === this.value,\n        },\n        attrs: {\n          type: 'button',\n        },\n        on: {\n          click: () => this.$emit('input', i),\n        },\n      }), [i.toString()])\n    },\n    genItems (h: CreateElement): VNode[] {\n      return this.items.map((i, index) => {\n        return h('li', { key: index }, [\n          isNaN(Number(i)) ? h('span', { class: 'v-pagination__more' }, [i.toString()]) : this.genItem(h, i),\n        ])\n      })\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genIcon(h, this.$vuetify.rtl ? this.nextIcon : this.prevIcon, this.value <= 1, this.previous),\n      this.genItems(h),\n      this.genIcon(h, this.$vuetify.rtl ? this.prevIcon : this.nextIcon, this.value >= this.length, this.next),\n    ]\n\n    return h('ul', {\n      directives: [{\n        modifiers: { quiet: true },\n        name: 'resize',\n        value: this.onResize,\n      }],\n      class: this.classes,\n    }, children)\n  },\n})\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.disabled && !this.validationState\n        ? 'primary'\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}